import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:uniswap/common/widgets/appbar/appbar.dart';
import 'package:uniswap/controllers/chat_controller.dart';
import 'package:uniswap/controllers/user_controller.dart';
import 'package:uniswap/core/app_export.dart';
import 'package:uniswap/core/utils/helpers/loaders.dart';
import 'package:uniswap/data/saved_data.dart';
import 'package:uniswap/models/user.dart';

class ChattingScreen extends StatefulWidget {
  const ChattingScreen({super.key, this.sellerUserId});

  final String? sellerUserId;

  @override
  State<ChattingScreen> createState() => _ChattingScreenState();
}

class _ChattingScreenState extends State<ChattingScreen> {
  final ChatController chatController = Get.put(ChatController());
  final UserController userController = Get.put(UserController());
  final TextEditingController messageController = TextEditingController();
  UserModel? _userDetails;

  @override
  void initState() {
    super.initState();
     _fetchUserDetails();
    chatController.fetchMessages(SavedData.getUserId(), widget.sellerUserId!);
  }

  Future<void> _fetchUserDetails() async {
    try {
      final user = await userController.getUserById(widget.sellerUserId);
      setState(() {
        _userDetails = user;
      });
    } catch (e) {
      TLoaders.errorSnackBar(
        title: "Error",
        message: e.toString(),
      );
    }
  }

  void _sendMessage() async {
    if (messageController.text.isNotEmpty) {
      await chatController.sendMessage(
        SavedData.getUserId(),
        widget.sellerUserId!,
        messageController.text,
      );
      messageController.clear();
    }
  }

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        resizeToAvoidBottomInset: true,
        appBar: TAppBar(
          showBackArrow: true,
          title: Text(_userDetails?.name ?? "Chat"),
        ),
        // appBar: TAppBar(
        //   showBackArrow: true,
        //   title: Wrap(
        //     crossAxisAlignment: WrapCrossAlignment.center,
        //     spacing: 5,
        //     children: [
        //       Container(
        //         height: 10.h,
        //         width: 10.w,
        //         decoration: BoxDecoration(
        //           color: appTheme.teal400,
        //           borderRadius: BorderRadius.circular(5.w),
        //         ),
        //       ),
        //       Text(
        //         _userDetails!.name ?? "",
        //         style: CustomTextStyles.text16Bold,
        //       ),
        //     ],
        //   ),
        // ),
       
        body: Column(
          children: [
            Expanded(
              child: Obx(() {
                return ListView.builder(
                  itemCount: chatController.messages.length,
                  itemBuilder: (context, index) {
                    final message = chatController.messages[index];
                    final isMe = message['senderId'] == SavedData.getUserId();

                    return Container(
                      margin: EdgeInsets.symmetric(vertical: 4.h, horizontal: 8.w),
                      alignment: isMe ? Alignment.centerRight : Alignment.centerLeft,
                      child: Container(
                        padding: EdgeInsets.all(10.w),
                        decoration: BoxDecoration(
                          color: isMe ? Colors.blue : Colors.grey[300],
                          borderRadius: BorderRadius.circular(10.w),
                        ),
                        child: Text(
                          message['message'],
                          style: TextStyle(
                            color: isMe ? Colors.white : Colors.black,
                          ),
                        ),
                      ),
                    );
                  },
                );
              }),
            ),
            Padding(
              padding: EdgeInsets.all(8.w),
              child: Row(
                children: [
                  Expanded(
                    child: TextField(
                      controller: messageController,
                      decoration: InputDecoration(
                        hintText: "Type a message...",
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(20.w),
                        ),
                      ),
                    ),
                  ),
                  SizedBox(width: 8.w),
                  IconButton(
                    onPressed: _sendMessage,
                    icon: Icon(Icons.send, color: Colors.blue),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}